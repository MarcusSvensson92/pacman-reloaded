//
// FX Version: fx_4_0
// Child effect (requires effect pool): false
//
// 4 local buffer(s)
//
cbuffer $Globals
{
    float   mFogRange = 100;            // Offset:    0, size:    4
}

cbuffer cbPerFrame
{
    float4x4 gWorld;                    // Offset:    0, size:   64
    float4x4 gViewProj;                 // Offset:   64, size:   64
    float3  gCameraPositionW;           // Offset:  128, size:   12
}

cbuffer cbPerObject
{
    float   gAlphaValue;                // Offset:    0, size:    4
    float3  gPlayerPos;                 // Offset:    4, size:   12
}

cbuffer cbConstants
{
    float2  gTexCoords[4] = { 0, 1, 0, 0, 1, 1, 1, 0 };// Offset:    0, size:   56
}

//
// 7 local object(s)
//
SamplerState linearSampler
{
    Filter   = uint(ANISOTROPIC /* 85 */);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};
BlendState AlphaBlending1
{
    AlphaToCoverageEnable = bool(TRUE /* 1 */);
    BlendEnable[0] = bool(TRUE /* 1 */);
    SrcBlend[0] = uint(ONE /* 2 */);
    SrcBlendAlpha[0] = uint(SRC_ALPHA /* 5 */);
    BlendOp[0] = uint(ADD /* 1 */);
    DestBlend[0] = uint(ONE /* 2 */);
    DestBlendAlpha[0] = uint(SRC_ALPHA /* 5 */);
    BlendOpAlpha[0] = uint(SUBTRACT /* 2 */);
    RenderTargetWriteMask[0] = byte(0x0f);
};
BlendState AlphaBlending2
{
    AlphaToCoverageEnable = bool(TRUE /* 1 */);
    BlendEnable[0] = bool(TRUE /* 1 */);
    SrcBlend[0] = uint(SRC_ALPHA /* 5 */);
    DestBlend[0] = uint(INV_SRC_ALPHA /* 6 */);
    BlendOp[0] = uint(ADD /* 1 */);
    SrcBlendAlpha[0] = uint(SRC_ALPHA /* 5 */);
    DestBlendAlpha[0] = uint(INV_SRC_ALPHA /* 6 */);
    BlendOpAlpha[0] = uint(ADD /* 1 */);
    RenderTargetWriteMask[0] = byte(0x0f);
};
RasterizerState NoCulling
{
    CullMode = uint(NONE /* 1 */);
    FillMode = uint(SOLID /* 3 */);
};
RasterizerState CullBack
{
    CullMode = uint(BACK /* 3 */);
    FillMode = uint(SOLID /* 3 */);
};
Texture2D gTexture;
SamplerState linSampler
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(CLAMP /* 3 */);
    AddressV = uint(CLAMP /* 3 */);
};

